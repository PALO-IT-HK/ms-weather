version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:17.03.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip
            pip install awscli
      - run:
          name: Build application Docker image
          command: |
            docker build -t app .
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              CLUSTER='ms-cluster'
              FAMILY='ms-weather'
              DOCKER_IMAGE='ms-weather'
              TASK='ms-weather'
              SERVICE='svc-ms-weather'
              # Login to AWS
              aws configure set region $AWS_REGION
              $(aws ecr get-login)
              # Tag and push docker image
              docker tag app $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:$CIRCLE_SHA1
              docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:$CIRCLE_SHA1
              # Create task for docker deploy
              task_template=$(cat .ecs-task-definition.json)
              echo "$task_template"
              task_def=$(printf "$task_template" $TASK $AWS_ACCOUNT_ID $AWS_REGION $TASK $CIRCLE_SHA1 $ENDPOINT_BASEINTERFACE $WEATHER_API_KEY)
              echo "$task_def"
              # Register task definition
              json=$(aws ecs register-task-definition --container-definitions "$task_def" --family "$FAMILY")
              # Grab revision # using regular bash and grep
              revision=$(echo "$json" | grep -o '"revision": [0-9]*' | grep -Eo '[0-9]+')
              # Deploy revision
              aws ecs update-service --cluster "$CLUSTER" --service "$SERVICE" --task-definition "$TASK":"$revision" --force-new-deployment --desired-count 2
              return 0
            fi